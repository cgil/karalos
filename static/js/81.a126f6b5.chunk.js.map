{"version":3,"file":"static/js/81.a126f6b5.chunk.js","mappings":"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","sources":["routes/admin/components/admin-layout.tsx","routes/admin/upload-page.tsx","routes/common-page.tsx"],"sourcesContent":["import { Box, Container, Paper, Tab, Tabs } from \"@mui/material\";\nimport { FC } from \"react\";\nimport { useMatch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { toRem } from \"../../../utils/styled-components\";\n\nimport { routePaths } from \"../../route-paths\";\n\ntype AdminLayoutProps = { children?: React.ReactNode };\n\nconst LinkTab = (props: { value: string; label: string }) => (\n  <Tab {...props} component={Link} to={`../${props.value}`} />\n);\n\nexport const AdminLayout: FC<AdminLayoutProps> = (props) => {\n  const match = useMatch(routePaths.admin);\n  const tabValue = match?.params[\"*\"];\n\n  return (\n    <Container maxWidth={false} disableGutters>\n      <Paper\n        elevation={1}\n        sx={{\n          bgcolor: (theme) => `${theme.palette.background.default} !important`,\n        }}\n      >\n        <Tabs sx={{ px: toRem(24), pt: toRem(12) }} value={tabValue}>\n          <LinkTab label=\"Upload\" value={routePaths.adminUpload} />\n          <LinkTab label=\"Manage\" value={routePaths.adminManage} />\n        </Tabs>\n        <Box p={4}>{props.children}</Box>\n      </Paper>\n    </Container>\n  );\n};\n","import { FC, useCallback, useEffect, useState } from \"react\";\nimport CommonPage from \"../common-page\";\nimport { ref as firebaseRef } from \"firebase/storage\";\nimport { useUploadFile } from \"react-firebase-hooks/storage\";\nimport { getFirebaseStorageRef } from \"../../utils/firebase-utils/firebase-utils\";\nimport { useDropzone } from \"react-dropzone\";\nimport styled, { useTheme } from \"styled-components\";\nimport { Stack } from \"@mui/system\";\nimport { EditText } from \"react-edit-text\";\nimport \"react-edit-text/dist/index.css\";\nimport ExifReader from \"exifreader\";\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { toRem } from \"../../utils/styled-components\";\nimport UploadIcon from \"@mui/icons-material/CloudUpload\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { AdminLayout } from \"./components/admin-layout\";\nimport { type FileType } from \"../../utils/firebase-utils/use-upload-many-files\";\n\nconst DropzoneContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: ${toRem(20)};\n  border-width: ${toRem(2)};\n  border-radius: ${toRem(2)};\n  border-color: ${(props) => props.theme[\"palette\"].dark};\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #bdbdbd;\n  outline: none;\n  transition: border 0.24s ease-in-out;\n  height: ${toRem(200)};\n`;\n\nconst PreviewContainer = styled(Stack)`\n  margin-top: ${toRem(24)};\n`;\n\nconst UploadPage: FC = (): JSX.Element | null => {\n  const theme = useTheme();\n  const storageRef = getFirebaseStorageRef();\n  const [files, setFiles] = useState<FileType[]>([]);\n  const [uploadFile, uploading] = useUploadFile();\n\n  const handleUploadAll = useCallback(async () => {\n    Promise.allSettled(\n      files.map(async (selectedFile) => {\n        if (selectedFile) {\n          const fileName = selectedFile.name.toLowerCase().replace(/\\s+/g, \"-\");\n          const ref = firebaseRef(storageRef, fileName);\n          return uploadFile(ref, selectedFile, {\n            contentType: `image/${selectedFile.type}`,\n            customMetadata: {\n              Latitude: selectedFile.Latitude?.toString() ?? \"\",\n              Longitude: selectedFile.Longitude?.toString() ?? \"\",\n            },\n          });\n        }\n      })\n    ).then(() => setFiles([]));\n  }, [files, storageRef, uploadFile]);\n\n  const { getRootProps, getInputProps, open } = useDropzone({\n    accept: { \"image/*\": [] },\n    onDrop: (acceptedFiles) => {\n      Promise.all(\n        acceptedFiles.map(async (file) => {\n          const fileTags = await ExifReader.load(file, { expanded: true });\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file),\n            Latitude: fileTags.gps?.Latitude,\n            Longitude: fileTags.gps?.Longitude,\n          });\n        })\n      ).then((files) => setFiles(files));\n    },\n  });\n\n  const removeFile = useCallback(\n    (file: FileType) => () => {\n      const newFiles = [...files];\n      newFiles.splice(newFiles.indexOf(file), 1);\n      setFiles(newFiles);\n    },\n    [files]\n  );\n\n  const handleUpdateFileName = useCallback(\n    (name: string, fileIndex: number) => {\n      let allFiles = [...files];\n      const fileToUpdate: FileType = allFiles[fileIndex];\n      const fileName = (name.substring(0, name.lastIndexOf(\".\")) || name)\n        .replace(/\\s+/g, \"-\")\n        .toLowerCase();\n\n      const fileExtension = fileToUpdate.type.slice(\n        fileToUpdate.type.lastIndexOf(\"/\") + 1\n      );\n\n      const updatedFile = new File(\n        [fileToUpdate],\n        `${fileName}.${fileExtension}`,\n        {\n          type: fileToUpdate.type,\n        }\n      );\n\n      allFiles[fileIndex] = Object.assign(updatedFile, {\n        preview: URL.createObjectURL(updatedFile),\n        Latitude: fileToUpdate.Latitude,\n        Longitude: fileToUpdate.Longitude,\n      });\n      setFiles(allFiles);\n    },\n    [files]\n  );\n\n  useEffect(\n    () => () => {\n      // Revoke the data uris to avoid memory leaks\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n    },\n    [files]\n  );\n\n  return (\n    <CommonPage pageName=\"Upload\">\n      <AdminLayout>\n        <Stack\n          direction=\"row\"\n          justifyContent=\"end\"\n          useFlexGap\n          sx={{ marginBottom: toRem(12) }}\n        >\n          <Tooltip\n            title={files.length > 0 ? null : \"No files added to Upload.\"}\n          >\n            <span>\n              <LoadingButton\n                size=\"medium\"\n                type=\"button\"\n                variant=\"contained\"\n                onClick={handleUploadAll}\n                color=\"secondary\"\n                disabled={!(files.length > 0)}\n                startIcon={<UploadIcon />}\n                loading={uploading}\n                loadingPosition=\"start\"\n              >\n                Upload\n              </LoadingButton>\n            </span>\n          </Tooltip>\n        </Stack>\n        <DropzoneContainer>\n          <div\n            {...getRootProps({ className: \"dropzone\" })}\n            onClick={(e) => e.stopPropagation}\n          >\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop some files here, or click to select images</p>\n            <Stack direction=\"row\" justifyContent=\"center\" useFlexGap>\n              <Button\n                size=\"medium\"\n                type=\"button\"\n                variant=\"contained\"\n                onClick={open}\n              >\n                Add\n              </Button>\n            </Stack>\n          </div>\n        </DropzoneContainer>\n        <PreviewContainer\n          direction=\"row\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n          justifyContent=\"flex-start\"\n          spacing={2}\n          useFlexGap\n        >\n          {files.map((file: FileType, fileIndex: number) => (\n            <Card sx={{ maxWidth: 280, display: \"flex\" }} key={file.name}>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  width: toRem(130),\n                  justifyContent: \"flex-start\",\n                }}\n              >\n                <CardMedia\n                  component=\"img\"\n                  image={file.preview}\n                  alt={file.name}\n                  sx={{\n                    width: \"auto\",\n                    maxWidth: toRem(130),\n                    height: toRem(133),\n                    objectFit: \"cover\",\n                  }}\n                />\n              </Box>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  width: toRem(150),\n                }}\n              >\n                <CardContent sx={{ flex: \"1 0 auto\" }}>\n                  <Typography noWrap variant=\"body2\" color=\"text.secondary\">\n                    Pending upload\n                  </Typography>\n                  <Tooltip title={file.name}>\n                    <Stack direction=\"row\">\n                      <span style={{ width: `calc(100% - ${30}px)` }}>\n                        <EditText\n                          defaultValue={file.name.slice(\n                            0,\n                            file.name.lastIndexOf(\".\")\n                          )}\n                          onSave={(data) =>\n                            handleUpdateFileName(data.value, fileIndex)\n                          }\n                          placeholder=\"Image name\"\n                          style={{\n                            border: `${toRem(1)} solid #ffff`,\n                            paddingLeft: 0,\n                            fontSize: theme[\"typography\"].body1.fontSize,\n                          }}\n                        />\n                      </span>\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        color=\"text.secondary\"\n                        style={{ width: toRem(30), lineHeight: toRem(34) }}\n                      >\n                        .{file.type.slice(file.type.lastIndexOf(\"/\") + 1)}\n                      </Typography>\n                    </Stack>\n                  </Tooltip>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    onClick={removeFile(file)}\n                  >\n                    Remove Image\n                  </Button>\n                </CardActions>\n              </Box>\n            </Card>\n          ))}\n        </PreviewContainer>\n      </AdminLayout>\n    </CommonPage>\n  );\n};\n\nexport default UploadPage;\n","import {\n  Box,\n  Toolbar,\n  IconButton,\n  Typography,\n  Divider,\n  List,\n  Container,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  styled,\n  Button,\n} from \"@mui/material\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from \"@mui/material/AppBar\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport CarouselIcon from \"@mui/icons-material/ViewCarousel\";\nimport CollectionsIcon from \"@mui/icons-material/Collections\";\nimport React, { ReactNode } from \"react\";\nimport { FC } from \"react\";\nimport { toRem } from \"../utils/styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../hooks/use-auth/use-auth\";\n\ntype CommonPageProps = {\n  children: ReactNode;\n  pageName: string;\n};\n\nconst drawerWidth: number = 240;\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop: string) => prop !== \"open\",\n})<AppBarProps>(({ theme, open }) => ({\n  zIndex: theme[\"zIndex\"].drawer + 1,\n  transition: theme[\"transitions\"].create([\"width\", \"margin\"], {\n    easing: theme[\"transitions\"].easing.sharp,\n    duration: theme[\"transitions\"].duration.leavingScreen,\n  }),\n  borderBottom: 1,\n  ...(open && {\n    marginLeft: `${toRem(drawerWidth)}`,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme[\"transitions\"].create([\"width\", \"margin\"], {\n      easing: theme[\"transitions\"].easing.sharp,\n      duration: theme[\"transitions\"].duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop: string) => prop !== \"open\",\n})(({ theme, open }) => ({\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: `${toRem(drawerWidth)}`,\n    transition: theme[\"transitions\"].create(\"width\", {\n      easing: theme[\"transitions\"].easing.sharp,\n      duration: theme[\"transitions\"].duration.enteringScreen,\n    }),\n    boxSizing: \"border-box\",\n    ...(!open && {\n      overflowX: \"hidden\",\n      transition: theme[\"transitions\"].create(\"width\", {\n        easing: theme[\"transitions\"].easing.sharp,\n        duration: theme[\"transitions\"].duration.leavingScreen,\n      }),\n      width: theme[\"spacing\"](7),\n      [theme[\"breakpoints\"].up(\"sm\")]: {\n        width: theme[\"spacing\"](9),\n      },\n    }),\n  },\n}));\n\nconst CommonPage: FC<CommonPageProps> = (props) => {\n  const auth = useAuth();\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <Box sx={{ display: \"flex\", backgroundColor: \"white\" }}>\n      <AppBar elevation={0} position=\"absolute\" open={open}>\n        <Toolbar\n          sx={{\n            pr: \"24px\", // keep right padding when drawer closed\n          }}\n        >\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer}\n            sx={{\n              marginRight: \"36px\",\n              backgroundColor: \"black\",\n              ...(open && { display: \"none\" }),\n            }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            sx={{ flexGrow: 1, color: \"black\" }}\n          >\n            {props.pageName}\n          </Typography>\n          {auth.user ? (\n            <Button onClick={auth.logout} color=\"primary\">\n              Logout\n            </Button>\n          ) : (\n            <Button component={Link} to=\"/sign-in\" color=\"inherit\">\n              Login\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n      <Drawer elevation={0} variant=\"permanent\" open={open}>\n        <Toolbar\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            px: [1],\n          }}\n        >\n          <IconButton onClick={toggleDrawer}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </Toolbar>\n        <Divider />\n        <List component=\"nav\">\n          <React.Fragment>\n            <StyledLink to=\"/\">\n              <ListItemButton>\n                <ListItemIcon>\n                  <CarouselIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Home\" />\n              </ListItemButton>\n            </StyledLink>\n          </React.Fragment>\n          <Divider sx={{ my: 1 }} />\n          <React.Fragment>\n            <StyledLink to=\"/gallery\">\n              <ListItemButton>\n                <ListItemIcon>\n                  <CollectionsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Gallery\" />\n              </ListItemButton>\n            </StyledLink>\n          </React.Fragment>\n          <Divider sx={{ my: 1 }} />\n        </List>\n      </Drawer>\n      <Box\n        component=\"main\"\n        sx={{\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"light\"\n              ? theme.palette.grey[100]\n              : theme.palette.grey[900],\n          flexGrow: 1,\n          height: \"100vh\",\n          overflow: \"auto\",\n        }}\n      >\n        <Toolbar />\n        <Container maxWidth=\"xl\" sx={{ mt: 4, mb: 4 }}>\n          {props.children}\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CommonPage;\n"],"names":["LinkTab","props","_jsx","Tab","_objectSpread","component","Link","to","concat","value","AdminLayout","match","useMatch","routePaths","admin","tabValue","params","Container","maxWidth","disableGutters","children","_jsxs","Paper","elevation","sx","bgcolor","theme","palette","background","default","Tabs","px","toRem","pt","label","adminUpload","adminManage","Box","p","DropzoneContainer","styled","div","_templateObject","_taggedTemplateLiteral","dark","PreviewContainer","Stack","_templateObject2","useTheme","storageRef","getFirebaseStorageRef","_useState","useState","_useState2","_slicedToArray","files","setFiles","_useUploadFile","useUploadFile","_useUploadFile2","uploadFile","uploading","handleUploadAll","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","Promise","allSettled","map","_ref2","_callee","selectedFile","_selectedFile$Latitud","_selectedFile$Latitud2","_selectedFile$Longitu","_selectedFile$Longitu2","fileName","ref","_context","name","toLowerCase","replace","firebaseRef","abrupt","contentType","type","customMetadata","Latitude","toString","Longitude","stop","_x","apply","arguments","then","_useDropzone","useDropzone","accept","onDrop","acceptedFiles","all","_ref3","_callee3","file","_fileTags$gps","_fileTags$gps2","fileTags","_context3","ExifReader","expanded","sent","Object","assign","preview","URL","createObjectURL","gps","_x2","getRootProps","getInputProps","open","removeFile","newFiles","_toConsumableArray","splice","indexOf","handleUpdateFileName","fileIndex","allFiles","fileToUpdate","substring","lastIndexOf","fileExtension","slice","updatedFile","File","useEffect","forEach","revokeObjectURL","CommonPage","pageName","direction","justifyContent","useFlexGap","marginBottom","Tooltip","title","length","LoadingButton","size","variant","onClick","color","disabled","startIcon","UploadIcon","loading","loadingPosition","className","e","stopPropagation","Button","alignItems","flexWrap","spacing","Card","display","width","CardMedia","image","alt","height","objectFit","flexDirection","CardContent","flex","Typography","noWrap","style","EditText","defaultValue","onSave","data","placeholder","border","paddingLeft","fontSize","body1","lineHeight","CardActions","StyledLink","AppBar","MuiAppBar","shouldForwardProp","prop","_ref","zIndex","drawer","transition","create","easing","sharp","duration","leavingScreen","borderBottom","marginLeft","enteringScreen","Drawer","MuiDrawer","position","whiteSpace","boxSizing","_defineProperty","overflowX","up","auth","useAuth","_React$useState","React","_React$useState2","setOpen","toggleDrawer","backgroundColor","Toolbar","pr","IconButton","edge","marginRight","MenuIcon","flexGrow","user","logout","ChevronLeftIcon","Divider","List","ListItemButton","ListItemIcon","CarouselIcon","ListItemText","primary","my","CollectionsIcon","mode","grey","overflow","mt","mb"],"sourceRoot":""}