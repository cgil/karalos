{"version":3,"file":"static/js/123.a0805d1d.chunk.js","mappings":"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","sources":["routes/admin/components/admin-layout.tsx","routes/admin/components/type-icon.tsx","routes/admin/components/drag-node.tsx","routes/admin/components/add-dialog.tsx","webpack://karalos/./src/routes/admin/components/tree.module.css?5ea2","routes/admin/manage-page.tsx","utils/firebase-utils/use-upload-many-files.ts","routes/common-page.tsx","utils/firebase-utils/use-loading-value.ts","utils/firebase-utils/use-list-items.ts"],"sourcesContent":["import { Box, Container, Paper, Tab, Tabs } from \"@mui/material\";\nimport { FC } from \"react\";\nimport { useMatch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { toRem } from \"../../../utils/styled-components\";\n\nimport { routePaths } from \"../../route-paths\";\n\ntype AdminLayoutProps = { children?: React.ReactNode };\n\nconst LinkTab = (props: { value: string; label: string }) => (\n  <Tab {...props} component={Link} to={`../${props.value}`} />\n);\n\nexport const AdminLayout: FC<AdminLayoutProps> = (props) => {\n  const match = useMatch(routePaths.admin);\n  const tabValue = match?.params[\"*\"];\n\n  return (\n    <Container maxWidth={false} disableGutters>\n      <Paper\n        elevation={1}\n        sx={{\n          bgcolor: (theme) => `${theme.palette.background.default} !important`,\n        }}\n      >\n        <Tabs sx={{ px: toRem(24), pt: toRem(12) }} value={tabValue}>\n          <LinkTab label=\"Upload\" value={routePaths.adminUpload} />\n          <LinkTab label=\"Manage\" value={routePaths.adminManage} />\n        </Tabs>\n        <Box p={4}>{props.children}</Box>\n      </Paper>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport FolderIcon from \"@mui/icons-material/Folder\";\nimport ImageIcon from \"@mui/icons-material/ImageOutlined\";\n\ntype TypeIconProps = {\n  droppable: boolean;\n  fileType?: string;\n};\n\nexport const TypeIcon: React.FC<TypeIconProps> = (props) => {\n  if (props.droppable) {\n    return <FolderIcon />;\n  }\n\n  switch (props.fileType) {\n    case \"image\":\n      return <ImageIcon />;\n    default:\n      return null;\n  }\n};\n","import React, { useCallback, useState } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { ArrowRight, Delete } from \"@mui/icons-material\";\nimport { useDragOver } from \"@minoru/react-dnd-treeview\";\nimport { NodeCustomData, NodeModel } from \"./types\";\nimport { TypeIcon } from \"./type-icon\";\nimport { toRem } from \"../../../utils/styled-components\";\nimport { TextField } from \"@mui/material\";\nimport { styled } from \"styled-components\";\n\ntype DragNodeProps = {\n  node: NodeModel<NodeCustomData>;\n  depth: number;\n  isOpen: boolean;\n  onToggle: (id: NodeModel[\"id\"]) => void;\n  onDelete: (id: NodeModel[\"id\"]) => void;\n  onTextChange: (id: NodeModel[\"id\"], value: string) => void;\n};\n\nconst StyledInputTextField = styled(TextField)`\n  && .MuiInputBase-input {\n    padding: ${toRem(3)};\n  }\n`;\n\nexport const DragNode: React.FC<DragNodeProps> = (props) => {\n  const [hover, setHover] = useState<boolean>(false);\n  const [visibleInput, setVisibleInput] = useState(false);\n  const { id, droppable, data, text } = props.node;\n  const [labelText, setLabelText] = useState(text);\n  const indent = props.depth * 24;\n\n  const handleToggle = useCallback(\n    (e: React.MouseEvent) => {\n      e.stopPropagation();\n      props.onToggle(props.node.id);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [props.onToggle]\n  );\n\n  const handleShowInput = useCallback(() => {\n    setVisibleInput(true);\n  }, []);\n\n  const handleCancel = useCallback(() => {\n    setLabelText(text);\n    setVisibleInput(false);\n  }, [text]);\n\n  const handleChangeText = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setLabelText(e.target.value);\n    },\n    []\n  );\n\n  const handleSubmit = useCallback(() => {\n    setVisibleInput(false);\n    props.onTextChange(id, labelText);\n  }, [id, labelText, props]);\n\n  const dragOverProps = useDragOver(id, props.isOpen, props.onToggle);\n\n  return (\n    <div\n      className={`tree-node root`}\n      style={{\n        paddingInlineStart: indent,\n        alignItems: \"center\",\n        display: \"grid\",\n        gridTemplateColumns: \"auto auto 1fr auto auto\",\n        height: toRem(32),\n        paddingInlineEnd: toRem(8),\n        width: \"fit-content\",\n        maxWidth: toRem(400),\n      }}\n      {...dragOverProps}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      <div\n        style={{\n          alignItems: \"center\",\n          fontSize: 0,\n          cursor: \"pointer\",\n          display: \"flex\",\n          height: toRem(24),\n          justifyContent: \"center\",\n          width: toRem(24),\n          transition: \"transform linear 0.1s\",\n          transform: props.isOpen ? \"rotate(90deg)\" : \"rotate(0deg)\",\n        }}\n      >\n        {props.node.droppable && (\n          <div onClick={handleToggle}>\n            <ArrowRight />\n          </div>\n        )}\n      </div>\n      <div>\n        <TypeIcon droppable={droppable ?? false} fileType={data?.fileType} />\n      </div>\n      <div style={{ paddingInlineStart: toRem(8) }}>\n        {visibleInput ? (\n          <div\n            style={{\n              alignItems: \"center\",\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(3, auto)\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <StyledInputTextField\n              value={labelText}\n              onChange={handleChangeText}\n              size=\"small\"\n              required\n              placeholder=\"Name\"\n            />\n            <IconButton\n              size=\"small\"\n              onClick={handleSubmit}\n              disabled={labelText === \"\"}\n            >\n              <CheckIcon fontSize=\"small\" />\n            </IconButton>\n            <IconButton size=\"small\" onClick={handleCancel}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </div>\n        ) : (\n          <div\n            style={{\n              alignItems: \"center\",\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(3, auto)\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <Typography variant=\"body2\" sx={{ paddingRight: toRem(16) }}>\n              {props.node.text}\n            </Typography>\n          </div>\n        )}\n      </div>\n      {hover && !visibleInput && (\n        <>\n          <div style={{ padding: \"0 4px\" }}>\n            <IconButton size=\"small\" onClick={handleShowInput}>\n              <EditIcon fontSize=\"small\" />\n            </IconButton>\n          </div>\n          <div>\n            <IconButton size=\"small\" onClick={() => props.onDelete(id)}>\n              <Delete fontSize=\"small\" />\n            </IconButton>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useCallback, useState } from \"react\";\nimport {\n  Button,\n  Select,\n  TextField,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport { NodeCustomData, NodeModel } from \"./types\";\nimport { toRem } from \"../../../utils/styled-components\";\n\ntype Props = {\n  tree: NodeModel<NodeCustomData>[];\n  onClose: () => void;\n  onSubmit: (e: Omit<NodeModel<NodeCustomData>, \"id\">) => void;\n};\n\nexport const AddDialog: React.FC<Props> = (props) => {\n  const [text, setText] = useState<string>(\"\");\n  const [parent, setParent] = useState<number>(0);\n\n  const handleChangeText = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setText(e.target.value);\n    },\n    []\n  );\n\n  const handleChangeParent = useCallback((e: SelectChangeEvent<number>) => {\n    setParent(Number(e.target.value));\n  }, []);\n\n  return (\n    <Dialog open={true} onClose={props.onClose} fullWidth>\n      <DialogTitle>Add New Folder</DialogTitle>\n      <DialogContent sx={{ display: \"grid\", gap: toRem(16) }}>\n        <div>\n          <TextField\n            label=\"Name\"\n            onChange={handleChangeText}\n            value={text}\n            fullWidth\n          />\n        </div>\n        <div>\n          <FormControl sx={{ width: \"100%\" }}>\n            <InputLabel>Parent</InputLabel>\n            <Select label=\"Parent\" onChange={handleChangeParent} value={parent}>\n              <MenuItem value={0}>(top level)</MenuItem>\n              {props.tree\n                .filter((node) => node.droppable === true)\n                .map((node) => (\n                  <MenuItem key={node.id} value={node.id}>\n                    {node.text}\n                  </MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onClose}>Cancel</Button>\n        <Button\n          disabled={text === \"\"}\n          onClick={() =>\n            props.onSubmit({\n              text,\n              parent,\n              droppable: true,\n              data: {\n                fileType: \"image\",\n              },\n            })\n          }\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"treeRoot\":\"tree_treeRoot__Coba5\",\"draggingSource\":\"tree_draggingSource__FYPV7\",\"dropTarget\":\"tree_dropTarget__r76kH\"};","import { FC, useCallback, useEffect, useState } from \"react\";\nimport CommonPage from \"../common-page\";\nimport { DndProvider } from \"react-dnd\";\n\nimport Button from \"@mui/material/Button\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport {\n  Tree,\n  MultiBackend,\n  getDescendants,\n  getBackendOptions,\n} from \"@minoru/react-dnd-treeview\";\nimport { NodeCustomData, NodeModel } from \"./components/types\";\nimport { DragNode } from \"./components/drag-node\";\nimport { AddDialog } from \"./components/add-dialog\";\nimport styles from \"./components/tree.module.css\";\n\nimport { AdminLayout } from \"./components/admin-layout\";\nimport { styled } from \"styled-components\";\nimport { getFirebaseStorageRef } from \"../../utils/firebase-utils/firebase-utils\";\nimport useListItems, {\n  ListItems,\n} from \"../../utils/firebase-utils/use-list-items\";\nimport FullScreenLoadingIndicator from \"../../components/full-screen-loading-indicator/full-screen-loading-indicator\";\nimport {\n  FileType,\n  useUploadManyFiles,\n} from \"../../utils/firebase-utils/use-upload-many-files\";\n\nconst StyledContainer = styled.div`\n  height: 100%;\n  ul {\n    list-style: none;\n    padding-left: 0;\n  }\n`;\n\nconst getLastId = (treeData: NodeModel[]): number => {\n  const reversedArray = [...treeData].sort((a, b) => {\n    if (a.id < b.id) {\n      return 1;\n    } else if (a.id > b.id) {\n      return -1;\n    }\n\n    return 0;\n  });\n\n  if (reversedArray.length > 0) {\n    return reversedArray[0].id as number;\n  }\n\n  return 0;\n};\n\nconst convertStringToNumber = (input: string): number => {\n  let hash = 0;\n  for (let i = 0; i < input.length; i++) {\n    hash += input.charCodeAt(i);\n  }\n  return hash;\n};\n\nconst listItemsToTreeData = ({\n  listItems,\n  parent,\n}: {\n  listItems: ListItems | undefined;\n  parent: number;\n}): NodeModel<NodeCustomData>[] => {\n  if (!listItems) return [];\n\n  const folderNodes: NodeModel<NodeCustomData>[] =\n    listItems?.folders?.map((folder) => ({\n      id: convertStringToNumber(folder.name),\n      parent: parent,\n      droppable: true,\n      text: folder.name,\n    })) ?? [];\n\n  const fileNodes: NodeModel<NodeCustomData>[] =\n    listItems?.files?.map((file) => ({\n      id: convertStringToNumber(file.name),\n      parent: parent,\n      text: file.name,\n      data: {\n        fileType: \"image\",\n      },\n    })) ?? [];\n\n  return [...folderNodes, ...fileNodes];\n};\n\nconst useManagePage = () => {\n  const firebaseStorage = getFirebaseStorageRef();\n  const storageRef = getFirebaseStorageRef();\n  const { uploadManyFiles, createFolder, uploading } = useUploadManyFiles();\n  const { data: listItems, loading: listItemsLoading } = useListItems({\n    storageRef: firebaseStorage,\n    fetchFolders: true,\n    fetchFiles: true,\n  });\n\n  const initialTreeData = listItemsToTreeData({ listItems, parent: 0 });\n  const [treeData, setTreeData] = useState<NodeModel<NodeCustomData>[]>([]);\n\n  const handleDrop = useCallback(\n    (newTree: NodeModel<NodeCustomData>[]) => setTreeData(newTree),\n    []\n  );\n\n  const [open, setOpen] = useState<boolean>(false);\n\n  const handleDelete = useCallback(\n    (id: NodeModel[\"id\"]) => {\n      const deleteIds = [\n        id,\n        ...getDescendants(treeData, id).map((node) => node.id),\n      ];\n      const newTree = treeData.filter((node) => !deleteIds.includes(node.id));\n\n      setTreeData(newTree);\n    },\n    [treeData]\n  );\n\n  const handleOpenDialog = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const handleCloseDialog = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const handleTextChange = useCallback(\n    (id: NodeModel[\"id\"], value: string) => {\n      const newTree = treeData.map((node) => {\n        if (node.id === id) {\n          return {\n            ...node,\n            text: value,\n          };\n        }\n\n        return node;\n      });\n\n      setTreeData(newTree);\n    },\n    [treeData]\n  );\n\n  const handleSubmit = useCallback(\n    async (newNode: Omit<NodeModel<NodeCustomData>, \"id\">) => {\n      const res = await createFolder({ storageRef, folderName: \"2019\" });\n\n      const lastId = getLastId(treeData) + 1;\n\n      setTreeData([\n        ...treeData,\n        {\n          ...newNode,\n          id: lastId,\n        },\n      ]);\n      setOpen(false);\n    },\n    [storageRef, treeData, uploadManyFiles]\n  );\n\n  useEffect(() => {\n    if (!listItemsLoading) {\n      setTreeData(initialTreeData);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [listItemsLoading]);\n\n  return {\n    open,\n    treeData,\n    listItemsLoading,\n    handleDrop,\n    handleDelete,\n    handleOpenDialog,\n    handleCloseDialog,\n    handleTextChange,\n    handleSubmit,\n  };\n};\n\nconst ManagePage: FC = (): JSX.Element | null => {\n  const controller = useManagePage();\n\n  if (controller.listItemsLoading) {\n    <CommonPage pageName=\"Manage\">\n      <AdminLayout>\n        <FullScreenLoadingIndicator />\n      </AdminLayout>\n    </CommonPage>;\n  }\n\n  return (\n    <CommonPage pageName=\"Manage\">\n      <AdminLayout>\n        <DndProvider backend={MultiBackend} options={getBackendOptions()}>\n          <StyledContainer>\n            <div>\n              <Button\n                onClick={controller.handleOpenDialog}\n                startIcon={<AddIcon />}\n                color=\"secondary\"\n              >\n                Add Folder\n              </Button>\n              {controller.open && (\n                <AddDialog\n                  tree={controller.treeData}\n                  onClose={controller.handleCloseDialog}\n                  onSubmit={controller.handleSubmit}\n                />\n              )}\n            </div>\n            <Tree\n              tree={controller.treeData}\n              rootId={0}\n              render={(node: NodeModel<NodeCustomData>, options) => (\n                <DragNode\n                  node={node}\n                  {...options}\n                  onDelete={controller.handleDelete}\n                  onTextChange={controller.handleTextChange}\n                />\n              )}\n              onDrop={controller.handleDrop}\n              classes={{\n                root: styles[\"treeRoot\"],\n                draggingSource: styles[\"draggingSource\"],\n                dropTarget: styles[\"dropTarget\"],\n              }}\n            />\n          </StyledContainer>\n        </DndProvider>\n      </AdminLayout>\n    </CommonPage>\n  );\n};\n\nexport default ManagePage;\n","import {\n  StorageReference,\n  ref as firebaseRef,\n  UploadResult,\n  getMetadata,\n} from \"firebase/storage\";\nimport { useCallback, useState } from \"react\";\nimport { useUploadFile } from \"react-firebase-hooks/storage\";\n\nexport type UseUploadManyFiles = {\n  uploadManyFiles: ({\n    storageRef,\n    files,\n  }: {\n    storageRef: StorageReference;\n    files: FileType[];\n  }) => Promise<(UploadResult | undefined)[]>;\n  createFolder: ({\n    storageRef,\n    folderName,\n  }: {\n    storageRef: StorageReference;\n    folderName: string;\n  }) => Promise<UploadResult | undefined>;\n  uploading: boolean;\n};\n\nexport type FileType = File & {\n  preview: string;\n  Latitude: number | undefined;\n  Longitude: number | undefined;\n};\n\nexport const useUploadManyFiles = (): UseUploadManyFiles => {\n  const [doneUploading, setDoneUploading] = useState<boolean>(true);\n  const [uploadFile, uploading] = useUploadFile();\n\n  const createFolder = useCallback(\n    async ({\n      storageRef,\n      folderName,\n    }: {\n      storageRef: StorageReference;\n      folderName: string;\n    }): Promise<UploadResult | undefined> => {\n      setDoneUploading(false);\n      const file: FileType = Object.assign(\n        new File([], `${folderName}/temp.jpeg`),\n        {\n          preview: \"\",\n          Latitude: undefined,\n          Longitude: undefined,\n        }\n      );\n\n      const ref = firebaseRef(storageRef, `${folderName}/temp.jpeg`);\n\n      return uploadFile(ref, file, {\n        contentType: \"image/jpeg\",\n      }).then(async (result) => {\n        setDoneUploading(true);\n        if (!result) return undefined;\n\n        const parentRef = result?.ref.parent\n          ? firebaseRef(result.ref.parent)\n          : undefined;\n\n        if (!parentRef) return undefined;\n\n        // Getting the folder metadata is not supported by firebase/storage, but we don't need it anyway\n        // this is to make types pass\n        const fakeParentMetadata = await getMetadata(result.ref);\n\n        // TODO: Delete the temp file we just created\n\n        return { ref: parentRef, metadata: fakeParentMetadata };\n      });\n    },\n    [uploadFile]\n  );\n\n  const uploadManyFiles = useCallback(\n    async ({\n      storageRef,\n      files,\n    }: {\n      storageRef: StorageReference;\n      files: FileType[];\n    }): Promise<(UploadResult | undefined)[]> => {\n      setDoneUploading(false);\n      return Promise.all(\n        files.map(async (selectedFile) => {\n          if (selectedFile) {\n            const fileName = selectedFile.name\n              .toLowerCase()\n              .replace(/\\s+/g, \"-\");\n            const ref = firebaseRef(storageRef, fileName);\n            const contentType = `image/${selectedFile.type}`;\n            return uploadFile(ref, selectedFile, {\n              contentType: contentType,\n              customMetadata: {\n                Latitude: selectedFile.Latitude?.toString() ?? \"\",\n                Longitude: selectedFile.Longitude?.toString() ?? \"\",\n              },\n            });\n          }\n        })\n      ).then((result) => {\n        setDoneUploading(true);\n        return result;\n      });\n    },\n    [uploadFile]\n  );\n\n  return {\n    uploadManyFiles,\n    createFolder,\n    uploading: !doneUploading || uploading,\n  };\n};\n","import {\n  Box,\n  Toolbar,\n  IconButton,\n  Typography,\n  Divider,\n  List,\n  Container,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  styled,\n  Button,\n} from \"@mui/material\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from \"@mui/material/AppBar\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport CarouselIcon from \"@mui/icons-material/ViewCarousel\";\nimport CollectionsIcon from \"@mui/icons-material/Collections\";\nimport React, { ReactNode } from \"react\";\nimport { FC } from \"react\";\nimport { toRem } from \"../utils/styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../hooks/use-auth/use-auth\";\n\ntype CommonPageProps = {\n  children: ReactNode;\n  pageName: string;\n};\n\nconst drawerWidth: number = 240;\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop: string) => prop !== \"open\",\n})<AppBarProps>(({ theme, open }) => ({\n  zIndex: theme[\"zIndex\"].drawer + 1,\n  transition: theme[\"transitions\"].create([\"width\", \"margin\"], {\n    easing: theme[\"transitions\"].easing.sharp,\n    duration: theme[\"transitions\"].duration.leavingScreen,\n  }),\n  borderBottom: 1,\n  ...(open && {\n    marginLeft: `${toRem(drawerWidth)}`,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme[\"transitions\"].create([\"width\", \"margin\"], {\n      easing: theme[\"transitions\"].easing.sharp,\n      duration: theme[\"transitions\"].duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop: string) => prop !== \"open\",\n})(({ theme, open }) => ({\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: `${toRem(drawerWidth)}`,\n    transition: theme[\"transitions\"].create(\"width\", {\n      easing: theme[\"transitions\"].easing.sharp,\n      duration: theme[\"transitions\"].duration.enteringScreen,\n    }),\n    boxSizing: \"border-box\",\n    ...(!open && {\n      overflowX: \"hidden\",\n      transition: theme[\"transitions\"].create(\"width\", {\n        easing: theme[\"transitions\"].easing.sharp,\n        duration: theme[\"transitions\"].duration.leavingScreen,\n      }),\n      width: theme[\"spacing\"](7),\n      [theme[\"breakpoints\"].up(\"sm\")]: {\n        width: theme[\"spacing\"](9),\n      },\n    }),\n  },\n}));\n\nconst CommonPage: FC<CommonPageProps> = (props) => {\n  const auth = useAuth();\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <Box sx={{ display: \"flex\", backgroundColor: \"white\" }}>\n      <AppBar elevation={0} position=\"absolute\" open={open}>\n        <Toolbar\n          sx={{\n            pr: \"24px\", // keep right padding when drawer closed\n          }}\n        >\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer}\n            sx={{\n              marginRight: \"36px\",\n              backgroundColor: \"black\",\n              ...(open && { display: \"none\" }),\n            }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            sx={{ flexGrow: 1, color: \"black\" }}\n          >\n            {props.pageName}\n          </Typography>\n          {auth.user ? (\n            <Button onClick={auth.logout} color=\"primary\">\n              Logout\n            </Button>\n          ) : (\n            <Button component={Link} to=\"/sign-in\" color=\"inherit\">\n              Login\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n      <Drawer elevation={0} variant=\"permanent\" open={open}>\n        <Toolbar\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            px: [1],\n          }}\n        >\n          <IconButton onClick={toggleDrawer}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </Toolbar>\n        <Divider />\n        <List component=\"nav\">\n          <React.Fragment>\n            <StyledLink to=\"/\">\n              <ListItemButton>\n                <ListItemIcon>\n                  <CarouselIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Home\" />\n              </ListItemButton>\n            </StyledLink>\n          </React.Fragment>\n          <Divider sx={{ my: 1 }} />\n          <React.Fragment>\n            <StyledLink to=\"/gallery\">\n              <ListItemButton>\n                <ListItemIcon>\n                  <CollectionsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Gallery\" />\n              </ListItemButton>\n            </StyledLink>\n          </React.Fragment>\n          <Divider sx={{ my: 1 }} />\n        </List>\n      </Drawer>\n      <Box\n        component=\"main\"\n        sx={{\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"light\"\n              ? theme.palette.grey[100]\n              : theme.palette.grey[900],\n          flexGrow: 1,\n          height: \"100vh\",\n          overflow: \"auto\",\n        }}\n      >\n        <Toolbar />\n        <Container maxWidth=\"xl\" sx={{ mt: 4, mb: 4 }}>\n          {props.children}\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CommonPage;\n","import { useCallback, useMemo, useReducer } from \"react\";\n\nexport type LoadingValue<T, E> = {\n  error?: E;\n  loading: boolean;\n  reset: () => void;\n  setError: (error: E) => void;\n  setValue: (value?: T) => void;\n  value?: T;\n};\n\ntype ReducerState<E> = {\n  error?: E;\n  loading: boolean;\n  value?: any;\n};\n\ntype ErrorAction<E> = { type: \"error\"; error: E };\ntype ResetAction = { type: \"reset\"; defaultValue?: any };\ntype ValueAction = { type: \"value\"; value: any };\ntype ReducerAction<E> = ErrorAction<E> | ResetAction | ValueAction;\n\nconst defaultState = (defaultValue?: any) => {\n  return {\n    loading: defaultValue === undefined || defaultValue === null,\n    value: defaultValue,\n  };\n};\n\nconst reducer =\n  <E>() =>\n  (state: ReducerState<E>, action: ReducerAction<E>): ReducerState<E> => {\n    switch (action.type) {\n      case \"error\":\n        return {\n          ...state,\n          error: action.error,\n          loading: false,\n          value: undefined,\n        };\n      case \"reset\":\n        return defaultState(action.defaultValue);\n      case \"value\":\n        return {\n          ...state,\n          error: undefined,\n          loading: false,\n          value: action.value,\n        };\n      default:\n        return state;\n    }\n  };\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default <T, E>(getDefaultValue?: () => T): LoadingValue<T, E> => {\n  const defaultValue = getDefaultValue ? getDefaultValue() : undefined;\n  const [state, dispatch] = useReducer(\n    reducer<E>(),\n    defaultState(defaultValue)\n  );\n\n  const reset = useCallback(() => {\n    const defaultValue = getDefaultValue ? getDefaultValue() : undefined;\n    dispatch({ type: \"reset\", defaultValue });\n  }, [getDefaultValue]);\n\n  const setError = useCallback((error: E) => {\n    dispatch({ type: \"error\", error });\n  }, []);\n\n  const setValue = useCallback((value?: T) => {\n    dispatch({ type: \"value\", value });\n  }, []);\n\n  return useMemo(\n    () => ({\n      error: state.error,\n      loading: state.loading,\n      reset,\n      setError,\n      setValue,\n      value: state.value,\n    }),\n    [state.error, state.loading, reset, setError, setValue, state.value]\n  );\n};\n","import {\n  getDownloadURL,\n  listAll,\n  StorageError,\n  StorageReference,\n} from \"firebase/storage\";\nimport { useEffect, useRef } from \"react\";\nimport { RequireAtLeastOne } from \"../type-utils\";\nimport useLoadingValue from \"./use-loading-value\";\n\ntype UseListItemsProps = RequireAtLeastOne<\n  {\n    storageRef?: StorageReference | null;\n    fetchFiles?: boolean;\n    fetchFolders?: boolean;\n  },\n  \"fetchFiles\" | \"fetchFolders\"\n>;\n\nexport type FileItem = {\n  name: string;\n  path: string;\n  url: string;\n};\nexport type FolderItem = {\n  name: string;\n  path: string;\n};\nexport type ListItems = {\n  files?: FileItem[];\n  folders?: FolderItem[];\n};\n\nexport type LoadingHook<T, E> = {\n  data: T | undefined;\n  loading: boolean;\n  error: E | undefined;\n};\nexport type ListItemsHook = LoadingHook<ListItems, StorageError>;\n\nexport type RefHook<T> = {\n  current: T;\n};\n\nexport const useComparatorRef = <T>(\n  value: T | null | undefined,\n  isEqual: (v1: T | null | undefined, v2: T | null | undefined) => boolean,\n  onChange?: () => void\n): RefHook<T | null | undefined> => {\n  const ref = useRef(value);\n  useEffect(() => {\n    if (!isEqual(value, ref.current)) {\n      ref.current = value;\n      if (onChange) {\n        onChange();\n      }\n    }\n  });\n  return ref;\n};\n\nconst isEqual = (\n  v1: StorageReference | null | undefined,\n  v2: StorageReference | null | undefined\n): boolean => {\n  const bothNull: boolean = !v1 && !v2;\n  const equal: boolean = !!v1 && !!v2 && v1.fullPath === v2.fullPath;\n  return bothNull || equal;\n};\n\nconst useListItems = (props: UseListItemsProps): ListItemsHook => {\n  const { error, loading, reset, setError, setValue, value } = useLoadingValue<\n    ListItems,\n    StorageError\n  >();\n  const ref = useComparatorRef(props.storageRef, isEqual, reset);\n\n  useEffect(() => {\n    if (!ref.current) {\n      setValue(undefined);\n      return;\n    }\n    listAll(ref.current)\n      .then((listResult) => {\n        return Promise.all([\n          props.fetchFiles\n            ? Promise.all(\n                listResult.items.map((item) => getDownloadURL(item))\n              ).then((urls) =>\n                urls.map((url, i) => ({\n                  url: url,\n                  path: listResult.items[i].fullPath,\n                  name: listResult.items[i].name,\n                }))\n              )\n            : undefined,\n          props.fetchFolders\n            ? listResult.prefixes.map((prefix) => ({\n                name: prefix.name,\n                path: prefix.fullPath,\n              }))\n            : undefined,\n        ]);\n      })\n      .then(([files, folders]) => {\n        setValue({\n          files: files,\n          folders: folders,\n        });\n      })\n      .catch(setError);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ref.current]);\n\n  return { data: value, loading, error };\n};\n\nexport default useListItems;\n"],"names":["LinkTab","props","_jsx","Tab","_objectSpread","component","Link","to","concat","value","AdminLayout","match","useMatch","routePaths","admin","tabValue","params","Container","maxWidth","disableGutters","children","_jsxs","Paper","elevation","sx","bgcolor","theme","palette","background","default","Tabs","px","toRem","pt","label","adminUpload","adminManage","Box","p","TypeIcon","droppable","FolderIcon","fileType","ImageIcon","StyledInputTextField","styled","TextField","_templateObject","_taggedTemplateLiteral","DragNode","_useState","useState","_useState2","_slicedToArray","hover","setHover","_useState3","_useState4","visibleInput","setVisibleInput","_props$node","node","id","data","text","_useState5","_useState6","labelText","setLabelText","indent","depth","handleToggle","useCallback","e","stopPropagation","onToggle","handleShowInput","handleCancel","handleChangeText","target","handleSubmit","onTextChange","dragOverProps","useDragOver","isOpen","className","style","paddingInlineStart","alignItems","display","gridTemplateColumns","height","paddingInlineEnd","width","onMouseEnter","onMouseLeave","fontSize","cursor","justifyContent","transition","transform","onClick","ArrowRight","onChange","size","required","placeholder","IconButton","disabled","CheckIcon","CloseIcon","Typography","variant","paddingRight","_Fragment","padding","EditIcon","onDelete","Delete","AddDialog","setText","parent","setParent","handleChangeParent","Number","Dialog","open","onClose","fullWidth","DialogTitle","DialogContent","gap","FormControl","InputLabel","Select","MenuItem","tree","filter","map","DialogActions","Button","onSubmit","StyledContainer","div","getLastId","treeData","reversedArray","_toConsumableArray","sort","a","b","length","convertStringToNumber","input","hash","i","charCodeAt","useManagePage","firebaseStorage","getFirebaseStorageRef","storageRef","_useUploadManyFiles","doneUploading","setDoneUploading","_useUploadFile","useUploadFile","_useUploadFile2","uploadFile","uploading","createFolder","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","_ref","folderName","file","ref","wrap","_context2","prev","next","Object","assign","File","preview","Latitude","undefined","Longitude","firebaseRef","abrupt","contentType","then","_ref3","_callee","result","parentRef","fakeParentMetadata","_context","getMetadata","sent","metadata","stop","_x2","apply","arguments","_x","uploadManyFiles","_ref5","_callee4","_ref4","files","_context4","Promise","all","_ref6","_callee3","selectedFile","_selectedFile$Latitud","_selectedFile$Latitud2","_selectedFile$Longitu","_selectedFile$Longitu2","fileName","_context3","name","toLowerCase","replace","type","customMetadata","toString","_x4","_x3","useUploadManyFiles","_useListItems","useListItems","fetchFolders","fetchFiles","listItems","listItemsLoading","loading","initialTreeData","_listItems$folders$ma","_listItems$folders","_listItems$files$map","_listItems$files","folderNodes","folders","folder","fileNodes","listItemsToTreeData","setTreeData","handleDrop","newTree","setOpen","handleDelete","deleteIds","getDescendants","includes","handleOpenDialog","handleCloseDialog","handleTextChange","newNode","lastId","useEffect","controller","CommonPage","pageName","DndProvider","backend","MultiBackend","options","getBackendOptions","startIcon","AddIcon","color","Tree","rootId","render","onDrop","classes","root","styles","draggingSource","dropTarget","StyledLink","AppBar","MuiAppBar","shouldForwardProp","prop","zIndex","drawer","create","easing","sharp","duration","leavingScreen","borderBottom","marginLeft","enteringScreen","Drawer","MuiDrawer","position","whiteSpace","boxSizing","_defineProperty","overflowX","up","auth","useAuth","_React$useState","React","_React$useState2","toggleDrawer","backgroundColor","Toolbar","pr","edge","marginRight","MenuIcon","noWrap","flexGrow","user","logout","ChevronLeftIcon","Divider","List","ListItemButton","ListItemIcon","CarouselIcon","ListItemText","primary","my","CollectionsIcon","mode","grey","overflow","mt","mb","defaultState","defaultValue","getDefaultValue","_useReducer","useReducer","state","action","error","_useReducer2","dispatch","reset","setError","setValue","useMemo","isEqual","v1","v2","bothNull","equal","fullPath","_useLoadingValue","useLoadingValue","useRef","current","useComparatorRef","listAll","listResult","items","item","getDownloadURL","urls","url","path","prefixes","prefix","catch"],"sourceRoot":""}