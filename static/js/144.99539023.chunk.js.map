{"version":3,"file":"static/js/144.99539023.chunk.js","mappings":"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","sources":["routes/admin/admin-page.tsx","routes/common-page.tsx"],"sourcesContent":["import { FC } from \"react\";\nimport CommonPage from \"../common-page\";\n\nconst AdminPage: FC = (): JSX.Element | null => {\n  return <CommonPage pageName=\"Admin\">Inside Admin Page</CommonPage>;\n};\n\nexport default AdminPage;\n","import {\n  Box,\n  Toolbar,\n  IconButton,\n  Typography,\n  Divider,\n  List,\n  Container,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  styled,\n  Button,\n} from \"@mui/material\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from \"@mui/material/AppBar\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport CarouselIcon from \"@mui/icons-material/ViewCarousel\";\nimport CollectionsIcon from \"@mui/icons-material/Collections\";\nimport React, { ReactNode } from \"react\";\nimport { FC } from \"react\";\nimport { toRem } from \"../utils/styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../hooks/use-auth/use-auth\";\n\ntype CommonPageProps = {\n  children: ReactNode;\n  pageName: string;\n};\n\nconst drawerWidth: number = 240;\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop: string) => prop !== \"open\",\n})<AppBarProps>(({ theme, open }) => ({\n  zIndex: theme[\"zIndex\"].drawer + 1,\n  transition: theme[\"transitions\"].create([\"width\", \"margin\"], {\n    easing: theme[\"transitions\"].easing.sharp,\n    duration: theme[\"transitions\"].duration.leavingScreen,\n  }),\n  borderBottom: 1,\n  ...(open && {\n    marginLeft: `${toRem(drawerWidth)}`,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme[\"transitions\"].create([\"width\", \"margin\"], {\n      easing: theme[\"transitions\"].easing.sharp,\n      duration: theme[\"transitions\"].duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop: string) => prop !== \"open\",\n})(({ theme, open }) => ({\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: `${toRem(drawerWidth)}`,\n    transition: theme[\"transitions\"].create(\"width\", {\n      easing: theme[\"transitions\"].easing.sharp,\n      duration: theme[\"transitions\"].duration.enteringScreen,\n    }),\n    boxSizing: \"border-box\",\n    ...(!open && {\n      overflowX: \"hidden\",\n      transition: theme[\"transitions\"].create(\"width\", {\n        easing: theme[\"transitions\"].easing.sharp,\n        duration: theme[\"transitions\"].duration.leavingScreen,\n      }),\n      width: theme[\"spacing\"](7),\n      [theme[\"breakpoints\"].up(\"sm\")]: {\n        width: theme[\"spacing\"](9),\n      },\n    }),\n  },\n}));\n\nconst CommonPage: FC<CommonPageProps> = (props) => {\n  const auth = useAuth();\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <Box sx={{ display: \"flex\", backgroundColor: \"white\" }}>\n      <AppBar elevation={0} position=\"absolute\" open={open}>\n        <Toolbar\n          sx={{\n            pr: \"24px\", // keep right padding when drawer closed\n          }}\n        >\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer}\n            sx={{\n              marginRight: \"36px\",\n              backgroundColor: \"black\",\n              ...(open && { display: \"none\" }),\n            }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            sx={{ flexGrow: 1, color: \"black\" }}\n          >\n            {props.pageName}\n          </Typography>\n          {auth.user ? (\n            <Button onClick={auth.logout} color=\"primary\">\n              Logout\n            </Button>\n          ) : (\n            <Button component={Link} to=\"/sign-in\" color=\"inherit\">\n              Login\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n      <Drawer elevation={0} variant=\"permanent\" open={open}>\n        <Toolbar\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            px: [1],\n          }}\n        >\n          <IconButton onClick={toggleDrawer}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </Toolbar>\n        <Divider />\n        <List component=\"nav\">\n          <React.Fragment>\n            <StyledLink to=\"/\">\n              <ListItemButton>\n                <ListItemIcon>\n                  <CarouselIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Home\" />\n              </ListItemButton>\n            </StyledLink>\n          </React.Fragment>\n          <Divider sx={{ my: 1 }} />\n          <React.Fragment>\n            <StyledLink to=\"/gallery\">\n              <ListItemButton>\n                <ListItemIcon>\n                  <CollectionsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Gallery\" />\n              </ListItemButton>\n            </StyledLink>\n          </React.Fragment>\n          <Divider sx={{ my: 1 }} />\n        </List>\n      </Drawer>\n      <Box\n        component=\"main\"\n        sx={{\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"light\"\n              ? theme.palette.grey[100]\n              : theme.palette.grey[900],\n          flexGrow: 1,\n          height: \"100vh\",\n          overflow: \"auto\",\n        }}\n      >\n        <Toolbar />\n        <Container maxWidth=\"xl\" sx={{ mt: 4, mb: 4 }}>\n          {props.children}\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CommonPage;\n"],"names":["_jsx","CommonPage","pageName","children","StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","AppBar","MuiAppBar","shouldForwardProp","prop","_ref","theme","open","_objectSpread","zIndex","drawer","transition","create","easing","sharp","duration","leavingScreen","borderBottom","marginLeft","concat","toRem","width","enteringScreen","Drawer","MuiDrawer","_ref2","position","whiteSpace","boxSizing","_defineProperty","overflowX","up","props","auth","useAuth","_React$useState","React","_React$useState2","_slicedToArray","setOpen","toggleDrawer","_jsxs","Box","sx","display","backgroundColor","elevation","Toolbar","pr","IconButton","edge","color","onClick","marginRight","MenuIcon","Typography","component","variant","noWrap","flexGrow","user","Button","logout","to","alignItems","justifyContent","px","ChevronLeftIcon","Divider","List","ListItemButton","ListItemIcon","CarouselIcon","ListItemText","primary","my","CollectionsIcon","palette","mode","grey","height","overflow","Container","maxWidth","mt","mb"],"sourceRoot":""}