{"version":3,"file":"static/js/477.3cafecf6.chunk.js","mappings":"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","sources":["routes/home/home-page.tsx"],"sourcesContent":["import {\n  Box,\n  Toolbar,\n  IconButton,\n  Typography,\n  Divider,\n  List,\n  Container,\n  Grid,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  styled,\n} from \"@mui/material\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from \"@mui/material/AppBar\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport DashboardIcon from \"@mui/icons-material/Dashboard\";\nimport React from \"react\";\nimport { FC } from \"react\";\nimport { toRem } from \"../../utils/styled-components\";\n\nconst drawerWidth: number = 240;\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop: string) => prop !== \"open\",\n})<AppBarProps>(({ theme, open }) => ({\n  zIndex: theme[\"zIndex\"].drawer + 1,\n  transition: theme[\"transitions\"].create([\"width\", \"margin\"], {\n    easing: theme[\"transitions\"].easing.sharp,\n    duration: theme[\"transitions\"].duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: `${toRem(drawerWidth)}`,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme[\"transitions\"].create([\"width\", \"margin\"], {\n      easing: theme[\"transitions\"].easing.sharp,\n      duration: theme[\"transitions\"].duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop: string) => prop !== \"open\",\n})(({ theme, open }) => ({\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: `${toRem(drawerWidth)}`,\n    transition: theme[\"transitions\"].create(\"width\", {\n      easing: theme[\"transitions\"].easing.sharp,\n      duration: theme[\"transitions\"].duration.enteringScreen,\n    }),\n    boxSizing: \"border-box\",\n    ...(!open && {\n      overflowX: \"hidden\",\n      transition: theme[\"transitions\"].create(\"width\", {\n        easing: theme[\"transitions\"].easing.sharp,\n        duration: theme[\"transitions\"].duration.leavingScreen,\n      }),\n      width: theme[\"spacing\"](7),\n      [theme[\"breakpoints\"].up(\"sm\")]: {\n        width: theme[\"spacing\"](9),\n      },\n    }),\n  },\n}));\n\n// eslint-disable-next-line max-lines-per-function\nconst HomePage: FC = () => {\n  const [open, setOpen] = React.useState(false);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" open={open}>\n        <Toolbar\n          sx={{\n            pr: \"24px\", // keep right padding when drawer closed\n          }}\n        >\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer}\n            sx={{\n              marginRight: \"36px\",\n              backgroundColor: \"black\",\n              ...(open && { display: \"none\" }),\n            }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            sx={{ flexGrow: 1, color: \"black\" }}\n          >\n            Home\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer variant=\"permanent\" open={open}>\n        <Toolbar\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            px: [1],\n          }}\n        >\n          <IconButton onClick={toggleDrawer}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </Toolbar>\n        <Divider />\n        <List component=\"nav\">\n          <React.Fragment>\n            <ListItemButton>\n              <ListItemIcon>\n                <DashboardIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Home\" />\n            </ListItemButton>\n          </React.Fragment>\n          <Divider sx={{ my: 1 }} />\n          <React.Fragment>\n            <ListItemButton>\n              <ListItemIcon>\n                <DashboardIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Gallery\" />\n            </ListItemButton>\n          </React.Fragment>\n        </List>\n      </Drawer>\n      <Box\n        component=\"main\"\n        sx={{\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"light\"\n              ? theme.palette.grey[100]\n              : theme.palette.grey[900],\n          flexGrow: 1,\n          height: \"100vh\",\n          overflow: \"auto\",\n        }}\n      >\n        <Toolbar />\n        <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n          <Grid container spacing={3}></Grid>\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default HomePage;\n"],"names":["AppBar","styled","MuiAppBar","shouldForwardProp","prop","_ref","theme","open","_objectSpread","zIndex","drawer","transition","create","easing","sharp","duration","leavingScreen","marginLeft","concat","toRem","width","enteringScreen","Drawer","MuiDrawer","_ref2","position","whiteSpace","boxSizing","_defineProperty","overflowX","up","_React$useState","React","_React$useState2","_slicedToArray","setOpen","toggleDrawer","_jsxs","Box","sx","display","children","_jsx","CssBaseline","Toolbar","pr","IconButton","edge","color","onClick","marginRight","backgroundColor","MenuIcon","Typography","component","variant","noWrap","flexGrow","alignItems","justifyContent","px","ChevronLeftIcon","Divider","List","ListItemButton","ListItemIcon","DashboardIcon","ListItemText","primary","my","palette","mode","grey","height","overflow","Container","maxWidth","mt","mb","Grid","container","spacing"],"sourceRoot":""}